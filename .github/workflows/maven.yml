# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
  
      - name: Successful Checkout
        run: |
          echo "Successful Checkout" >> file.txt
          
      - name: Check Java Installation
        run: java -version
        
      - name: Successful Java Version
        run: |
          echo "Successful Java Version" >> file.txt

      - name: Build with Maven
        run: mvn clean compile package -Dmaven.test.skip=true
        
      - name: Upload Artifact for Deployment
        uses: actions/upload-artifact@v2

#       - name: Deploy to Runner
#         run: |
#           # Replace with your deployment commands
#           # For example, copy the JAR file to the runner and run it
#           cp target/my-app.jar /path/to/runner
#           cd /path/to/runner
#           java -jar my-app.jar

#        # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#       - name: Update dependency graph
#         uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
